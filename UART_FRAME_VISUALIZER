<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>UART Frame Visualizer</title>
  <style>
    body {
      font-family: sans-serif;
      background: #1e1e1e;
      color: white;
      text-align: center;
      padding: 2em;
    }

    input {
      font-size: 1.2em;
      padding: 0.5em;
      width: 80%;
      margin-bottom: 1em;
    }

    .legend {
      position: absolute;
      top: 20px;
      left: 20px;
      background: #2c2c2c;
      padding: 1em;
      border-radius: 10px;
      border: 1px solid #555;
      text-align: left;
    }

    .legend div {
      margin: 0.4em 0;
      display: flex;
      align-items: center;
    }

    .color-box {
      display: inline-block;
      width: 15px;
      height: 15px;
      margin-right: 0.5em;
      border-radius: 3px;
    }

    .mark { background-color: #9b59b6; color: #fff; }
    .space { background-color: #7f8c8d; color: #fff; }

    .bubble-container {
      display: inline-block;
      margin: 2px;
      text-align: center;
    }

    .bubble {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      line-height: 30px;
      font-weight: bold;
      margin: 0 auto;
    }

    .label {
      font-size: 0.7em;
      margin-top: 2px;
      display: block;
      color: #aaa;
    }

    .signal-line {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      margin-top: 2em;
      max-width: 1000px;
      margin-left: auto;
      margin-right: auto;
      gap: 2px;
    }

    .row-break {
      flex-basis: 100%;
      height: 0;
    }

    .char-info {
      margin-top: 0.5em;
      font-size: 0.9em;
      color: #ccc;
    }
  </style>
</head>
<body>
  <h1>UART Frame Visualizer</h1>
  <p>Enter a sentence to visualize its UART transmission:</p>

  <input type="text" id="charInput" placeholder="Type something..." />

  <div class="legend">
    <div><span class="color-box" style="background:#9b59b6"></span> Mark (1) — Idle / Stop / Bit "1"</div>
    <div><span class="color-box" style="background:#7f8c8d"></span> Space (0) — Start / Bit "0"</div>
    <div style="margin-top:0.7em; font-size: 0.8em; text-align: center;">*Row wraps every 24 bits*</div>
  </div>

  <div id="output"></div>

  <script>
    const input = document.getElementById("charInput");
    const output = document.getElementById("output");

    input.addEventListener("input", () => {
      const text = input.value;
      output.innerHTML = ""; // Καθάρισε το output

      if (!text) return;

      const signalLine = document.createElement("div");
      signalLine.classList.add("signal-line");
      let bitCounter = 0;

      for (let char of text) {
        const ascii = char.charCodeAt(0);
        const binary = ascii.toString(2).padStart(8, "0");
        const dataBits = binary.split("").reverse();
        const frame = ["0", ...dataBits, "1"];

        const labels = ["Start", ...Array(8).fill("Data"), "Stop"];

        const info = document.createElement("div");
        info.className = "char-info";
        info.innerText = `Character '${char}' → ASCII ${ascii} → Binary ${binary} → UART Frame: Start(0) + Data(LSB first) + Stop(1)`;
        output.appendChild(info);

        for (let i = 0; i < frame.length; i++) {
          const bit = frame[i];
          const label = labels[i];

          const container = document.createElement("div");
          container.className = "bubble-container";

          const bubble = document.createElement("div");
          bubble.className = `bubble ${bit === "1" ? "mark" : "space"}`;
          bubble.innerText = bit;

          const labelSpan = document.createElement("span");
          labelSpan.className = "label";
          labelSpan.innerText = label;

          container.appendChild(bubble);
          container.appendChild(labelSpan);
          signalLine.appendChild(container);

          bitCounter++;
          if (bitCounter % 24 === 0) {
            const br = document.createElement("div");
            br.className = "row-break";
            signalLine.appendChild(br);
          }
        }
      }

      output.appendChild(signalLine);
    });
  </script>
</body>
</html>

